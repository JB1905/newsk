'use strict';

var index$1 = require('./index-bfad13cd.js');
var newsapi = require('./newsapi-61ce29d9.js');

/* src/components/Publisher.svelte generated by Svelte v3.16.7 */

const Publisher = index$1.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { data } = $$props;
	const { id, name, description } = data;
	if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);

	return `<div class="${"publisher max-w-sm rounded overflow-hidden shadow-lg mx-auto my-8"}">
  <div class="${"px-6 py-4"}">
    <a href="${"publishers/" + index$1.escape(id)}">
      <div class="${"font-bold text-xl mb-2"}">${index$1.escape(name)}</div>
    </a>

    ${description
	? `<p class="${"text-gray-700 text-base"}">
        ${description}
      </p>`
	: ``}
  </div>
</div>`;
});

/* src/routes/publishers/index.svelte generated by Svelte v3.16.7 */

async function preload({ params, query }) {
	const res = await this.fetch(`https://newsapi.org/v2/sources?apiKey=${newsapi.apiKey}`);
	const data = await res.json();

	if (res.status === 200) {
		return { publishers: data.sources };
	} else {
		this.error(res.status, data.message);
	}
}

const Publishers = index$1.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { publishers } = $$props;
	if ($$props.publishers === void 0 && $$bindings.publishers && publishers !== void 0) $$bindings.publishers(publishers);

	return `${($$result.head += `<title>Publishers</title>`, "")}

${index$1.each(publishers, publisher => `${index$1.validate_component(Publisher, "Publisher").$$render($$result, { data: publisher }, {}, {})}`)}`;
});

exports.default = Publishers;
exports.preload = preload;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtODY1YjU4ZWYuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1B1Ymxpc2hlci5zdmVsdGUiLCIuLi8uLi8uLi9zcmMvcm91dGVzL3B1Ymxpc2hlcnMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGV4cG9ydCBsZXQgZGF0YTtcblxuICBjb25zdCB7IGlkLCBuYW1lLCBkZXNjcmlwdGlvbiB9ID0gZGF0YTtcbjwvc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwicHVibGlzaGVyIG1heC13LXNtIHJvdW5kZWQgb3ZlcmZsb3ctaGlkZGVuIHNoYWRvdy1sZyBteC1hdXRvIG15LThcIj5cbiAgPGRpdiBjbGFzcz1cInB4LTYgcHktNFwiPlxuICAgIDxhIGhyZWY9XCJwdWJsaXNoZXJzL3tpZH1cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJmb250LWJvbGQgdGV4dC14bCBtYi0yXCI+e25hbWV9PC9kaXY+XG4gICAgPC9hPlxuXG4gICAgeyNpZiBkZXNjcmlwdGlvbn1cbiAgICAgIDxwIGNsYXNzPVwidGV4dC1ncmF5LTcwMCB0ZXh0LWJhc2VcIj5cbiAgICAgICAge0BodG1sIGRlc2NyaXB0aW9ufVxuICAgICAgPC9wPlxuICAgIHsvaWZ9XG4gIDwvZGl2PlxuPC9kaXY+XG4iLCI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cbiAgaW1wb3J0IHsgYXBpS2V5IH0gZnJvbSAnLi4vLi4vYXBpL25ld3NhcGknO1xuXG4gIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVsb2FkKHsgcGFyYW1zLCBxdWVyeSB9KSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5mZXRjaChcbiAgICAgIGBodHRwczovL25ld3NhcGkub3JnL3YyL3NvdXJjZXM/YXBpS2V5PSR7YXBpS2V5fWBcbiAgICApO1xuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICByZXR1cm4geyBwdWJsaXNoZXJzOiBkYXRhLnNvdXJjZXMgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lcnJvcihyZXMuc3RhdHVzLCBkYXRhLm1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuPC9zY3JpcHQ+XG5cbjxzY3JpcHQ+XG4gIGltcG9ydCBQdWJsaXNoZXIgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9QdWJsaXNoZXIuc3ZlbHRlJztcblxuICBleHBvcnQgbGV0IHB1Ymxpc2hlcnM7XG48L3NjcmlwdD5cblxuPHN2ZWx0ZTpoZWFkPlxuICA8dGl0bGU+UHVibGlzaGVyczwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG57I2VhY2ggcHVibGlzaGVycyBhcyBwdWJsaXNoZXJ9XG4gIDxQdWJsaXNoZXIgZGF0YT17cHVibGlzaGVyfSAvPlxuey9lYWNofVxuIl0sIm5hbWVzIjpbImFwaUtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7T0FDYSxJQUFJO1NBRVAsRUFBRSxFQUFFLElBQUksRUFBRSxXQUFXLEtBQUssSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUNBaEIsT0FBTyxHQUFHLE1BQU0sRUFBRSxLQUFLO09BQ3JDLEdBQUcsU0FBUyxJQUFJLENBQUMsS0FBSywwQ0FDZUEsY0FBTTtPQUczQyxJQUFJLFNBQVMsR0FBRyxDQUFDLElBQUk7O0tBRXZCLEdBQUcsQ0FBQyxNQUFNLEtBQUssR0FBRztXQUNYLFVBQVUsRUFBRSxJQUFJLENBQUMsT0FBTzs7RUFFakMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPOzs7OztPQVY1QixVQUFVOzs7OztlQXlCaEIsVUFBVTs7Ozs7OyJ9
